Grammar

    0 $accept: lines $end

    1 lines: ε
    2      | lines line

    3 line: line_body line_tail ';'

    4 line_tail: ε
    5          | line_tail color_state

    6 color_state: ',' COLOR

    7 line_body: statement
    8          | plotment

    9 statement: ID ASSIGN expr

   10 plotment: STICKLINE '(' params ')'

   11 expr: '(' expr ')'
   12     | expr '+' expr
   13     | expr '-' expr
   14     | expr '*' expr
   15     | expr '/' expr
   16     | expr '>' expr
   17     | expr '<' expr
   18     | expr '=' expr
   19     | expr LE expr
   20     | expr GE expr
   21     | expr AND expr
   22     | expr OR expr
   23     | func
   24     | ID
   25     | NUMBER
   26     | FLOAT_NUM

   27 func: ID '(' params ')'

   28 params: expr
   29       | params ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 11 27
    ')' (41) 10 11 27
    '*' (42) 14
    '+' (43) 12
    ',' (44) 6 29
    '-' (45) 13
    '/' (47) 15
    ';' (59) 3
    '<' (60) 17
    '=' (61) 18
    '>' (62) 16
    error (256)
    COLOR <sval> (258) 6
    STICKLINE <sval> (259) 10
    ID <sval> (260) 9 24 27
    NUMBER <sval> (261) 25
    FLOAT_NUM <sval> (262) 26
    ASSIGN (263) 9
    AND (264) 21
    OR (265) 22
    LE (266) 19
    GE (267) 20


Nonterminals, with rules where they appear

    $accept (24)
        on left: 0
    lines <sval> (25)
        on left: 1 2
        on right: 0 2
    line <sval> (26)
        on left: 3
        on right: 2
    line_tail (27)
        on left: 4 5
        on right: 3 5
    color_state (28)
        on left: 6
        on right: 5
    line_body <sval> (29)
        on left: 7 8
        on right: 3
    statement <sval> (30)
        on left: 9
        on right: 7
    plotment <sval> (31)
        on left: 10
        on right: 8
    expr <sval> (32)
        on left: 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
        on right: 9 11 12 13 14 15 16 17 18 19 20 21 22 28 29
    func <sval> (33)
        on left: 27
        on right: 23
    params <sval> (34)
        on left: 28 29
        on right: 10 27 29


State 0

    0 $accept: • lines $end

    $default  reduce using rule 1 (lines)

    lines  go to state 1


State 1

    0 $accept: lines • $end
    2 lines: lines • line

    $end       shift, and go to state 2
    STICKLINE  shift, and go to state 3
    ID         shift, and go to state 4

    line       go to state 5
    line_body  go to state 6
    statement  go to state 7
    plotment   go to state 8


State 2

    0 $accept: lines $end •

    $default  accept


State 3

   10 plotment: STICKLINE • '(' params ')'

    '('  shift, and go to state 9


State 4

    9 statement: ID • ASSIGN expr

    ASSIGN  shift, and go to state 10


State 5

    2 lines: lines line •

    $default  reduce using rule 2 (lines)


State 6

    3 line: line_body • line_tail ';'

    $default  reduce using rule 4 (line_tail)

    line_tail  go to state 11


State 7

    7 line_body: statement •

    $default  reduce using rule 7 (line_body)


State 8

    8 line_body: plotment •

    $default  reduce using rule 8 (line_body)


State 9

   10 plotment: STICKLINE '(' • params ')'

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr    go to state 16
    func    go to state 17
    params  go to state 18


State 10

    9 statement: ID ASSIGN • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 19
    func  go to state 17


State 11

    3 line: line_body line_tail • ';'
    5 line_tail: line_tail • color_state

    ';'  shift, and go to state 20
    ','  shift, and go to state 21

    color_state  go to state 22


State 12

   24 expr: ID •
   27 func: ID • '(' params ')'

    '('  shift, and go to state 23

    $default  reduce using rule 24 (expr)


State 13

   25 expr: NUMBER •

    $default  reduce using rule 25 (expr)


State 14

   26 expr: FLOAT_NUM •

    $default  reduce using rule 26 (expr)


State 15

   11 expr: '(' • expr ')'

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 24
    func  go to state 17


State 16

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr
   28 params: expr •

    AND  shift, and go to state 25
    OR   shift, and go to state 26
    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    '='  shift, and go to state 29
    LE   shift, and go to state 30
    GE   shift, and go to state 31
    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 28 (params)


State 17

   23 expr: func •

    $default  reduce using rule 23 (expr)


State 18

   10 plotment: STICKLINE '(' params • ')'
   29 params: params • ',' expr

    ','  shift, and go to state 36
    ')'  shift, and go to state 37


State 19

    9 statement: ID ASSIGN expr •
   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr

    AND  shift, and go to state 25
    OR   shift, and go to state 26
    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    '='  shift, and go to state 29
    LE   shift, and go to state 30
    GE   shift, and go to state 31
    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 9 (statement)


State 20

    3 line: line_body line_tail ';' •

    $default  reduce using rule 3 (line)


State 21

    6 color_state: ',' • COLOR

    COLOR  shift, and go to state 38


State 22

    5 line_tail: line_tail color_state •

    $default  reduce using rule 5 (line_tail)


State 23

   27 func: ID '(' • params ')'

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr    go to state 16
    func    go to state 17
    params  go to state 39


State 24

   11 expr: '(' expr • ')'
   12     | expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr

    AND  shift, and go to state 25
    OR   shift, and go to state 26
    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    '='  shift, and go to state 29
    LE   shift, and go to state 30
    GE   shift, and go to state 31
    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ')'  shift, and go to state 40


State 25

   21 expr: expr AND • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 41
    func  go to state 17


State 26

   22 expr: expr OR • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 42
    func  go to state 17


State 27

   16 expr: expr '>' • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 43
    func  go to state 17


State 28

   17 expr: expr '<' • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 44
    func  go to state 17


State 29

   18 expr: expr '=' • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 45
    func  go to state 17


State 30

   19 expr: expr LE • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 46
    func  go to state 17


State 31

   20 expr: expr GE • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 47
    func  go to state 17


State 32

   13 expr: expr '-' • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 48
    func  go to state 17


State 33

   12 expr: expr '+' • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 49
    func  go to state 17


State 34

   14 expr: expr '*' • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 50
    func  go to state 17


State 35

   15 expr: expr '/' • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 51
    func  go to state 17


State 36

   29 params: params ',' • expr

    ID         shift, and go to state 12
    NUMBER     shift, and go to state 13
    FLOAT_NUM  shift, and go to state 14
    '('        shift, and go to state 15

    expr  go to state 52
    func  go to state 17


State 37

   10 plotment: STICKLINE '(' params ')' •

    $default  reduce using rule 10 (plotment)


State 38

    6 color_state: ',' COLOR •

    $default  reduce using rule 6 (color_state)


State 39

   27 func: ID '(' params • ')'
   29 params: params • ',' expr

    ','  shift, and go to state 36
    ')'  shift, and go to state 53


State 40

   11 expr: '(' expr ')' •

    $default  reduce using rule 11 (expr)


State 41

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   21     | expr AND expr •
   22     | expr • OR expr

    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    '='  shift, and go to state 29
    LE   shift, and go to state 30
    GE   shift, and go to state 31
    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 21 (expr)


State 42

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr
   22     | expr OR expr •

    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    '='  shift, and go to state 29
    LE   shift, and go to state 30
    GE   shift, and go to state 31
    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 22 (expr)


State 43

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   16     | expr '>' expr •
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr

    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (expr)


State 44

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   17     | expr '<' expr •
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr

    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (expr)


State 45

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   18     | expr '=' expr •
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr

    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (expr)


State 46

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   19     | expr LE expr •
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr

    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (expr)


State 47

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   20     | expr GE expr •
   21     | expr • AND expr
   22     | expr • OR expr

    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    '>'  error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (expr)


State 48

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   13     | expr '-' expr •
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 13 (expr)


State 49

   12 expr: expr • '+' expr
   12     | expr '+' expr •
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 12 (expr)


State 50

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   14     | expr '*' expr •
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr

    $default  reduce using rule 14 (expr)


State 51

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   15     | expr '/' expr •
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr

    $default  reduce using rule 15 (expr)


State 52

   12 expr: expr • '+' expr
   13     | expr • '-' expr
   14     | expr • '*' expr
   15     | expr • '/' expr
   16     | expr • '>' expr
   17     | expr • '<' expr
   18     | expr • '=' expr
   19     | expr • LE expr
   20     | expr • GE expr
   21     | expr • AND expr
   22     | expr • OR expr
   29 params: params ',' expr •

    AND  shift, and go to state 25
    OR   shift, and go to state 26
    '>'  shift, and go to state 27
    '<'  shift, and go to state 28
    '='  shift, and go to state 29
    LE   shift, and go to state 30
    GE   shift, and go to state 31
    '-'  shift, and go to state 32
    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35

    $default  reduce using rule 29 (params)


State 53

   27 func: ID '(' params ')' •

    $default  reduce using rule 27 (func)
